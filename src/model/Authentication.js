/**
 * Topological Inventory
 * Topological Inventory
 *
 * OpenAPI spec version: 0.1.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Authentication model module.
 * @module model/Authentication
 * @version 0.1.0
 */
class Authentication {
    /**
     * Constructs a new <code>Authentication</code>.
     * @alias module:model/Authentication
     */
    constructor() { 
        
        Authentication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Authentication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Authentication} obj Optional instance to populate.
     * @return {module:model/Authentication} The populated <code>Authentication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Authentication();

            if (data.hasOwnProperty('authtype')) {
                obj['authtype'] = ApiClient.convertToType(data['authtype'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('resource_id')) {
                obj['resource_id'] = ApiClient.convertToType(data['resource_id'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('status_details')) {
                obj['status_details'] = ApiClient.convertToType(data['status_details'], 'String');
            }
            if (data.hasOwnProperty('tenant_id')) {
                obj['tenant_id'] = ApiClient.convertToType(data['tenant_id'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} authtype
 */
Authentication.prototype['authtype'] = undefined;

/**
<<<<<<< HEAD
 * ID of the resource
=======
>>>>>>> Update API definition, use v0.1 and resolve ID/IDReadonly problem.
 * @member {String} id
 */
Authentication.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Authentication.prototype['name'] = undefined;

/**
 * @member {String} password
 */
Authentication.prototype['password'] = undefined;

/**
 * ID of the resource
 * @member {String} resource_id
 */
Authentication.prototype['resource_id'] = undefined;

/**
 * @member {String} resource_type
 */
Authentication.prototype['resource_type'] = undefined;

/**
 * @member {String} status
 */
Authentication.prototype['status'] = undefined;

/**
 * @member {String} status_details
 */
Authentication.prototype['status_details'] = undefined;

/**
<<<<<<< HEAD
 * ID of the resource
=======
>>>>>>> Update API definition, use v0.1 and resolve ID/IDReadonly problem.
 * @member {String} tenant_id
 */
Authentication.prototype['tenant_id'] = undefined;

/**
 * @member {String} username
 */
Authentication.prototype['username'] = undefined;






export default Authentication;

