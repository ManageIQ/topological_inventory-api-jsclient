/**
 * Topological Inventory
 * Topological Inventory
 *
 * OpenAPI spec version: 0.1.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@ManageiqTopologicalInventory);
  }
}(this, function(expect, @ManageiqTopologicalInventory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @ManageiqTopologicalInventory.Availability();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Availability', function() {
    it('should create an instance of Availability', function() {
      // uncomment below and update the code to test Availability
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be.a(@ManageiqTopologicalInventory.Availability);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property lastCheckedAt (base name: "last_checked_at")', function() {
      // uncomment below and update the code to test the property lastCheckedAt
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property lastValidAt (base name: "last_valid_at")', function() {
      // uncomment below and update the code to test the property lastValidAt
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resource_id")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property resourceType (base name: "resource_type")', function() {
      // uncomment below and update the code to test the property resourceType
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new @ManageiqTopologicalInventory.Availability();
      //expect(instance).to.be();
    });

  });

}));
